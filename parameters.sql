-- CONNECT SYSTEM
ALTER SESSION SET EVENTS '10150 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10904 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '25475 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10407 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10851 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '22830 TRACE NAME CONTEXT FOREVER, LEVEL 192 ';
-- new object type path: SCHEMA_EXPORT/USER
 CREATE USER "PARAMETERS" IDENTIFIED BY VALUES 'S:46AC215916C5FAC7D6FE720C20F54873D3DBEA08F5143477453DC38353CA;H:24A5520DC68F0DCF40A51FAF310213FD;T:DCBDB4F4BCFA2178C699A7DD77BEBC518EDC845E7D5A545C97AFD59A638CEFE1724E84848E3515BD38BA6F7633011772AF20061A9A68E2C2D3C0B02D1277AD00DF899BA9652A56E6E97F89505391ABCD;BC6396D11663FFE9'
      DEFAULT TABLESPACE "DATA01"
      TEMPORARY TABLESPACE "TEMP";
-- new object type path: SCHEMA_EXPORT/SYSTEM_GRANT
GRANT READ ANY TABLE TO "PARAMETERS";
GRANT ALTER ANY CUBE BUILD PROCESS TO "PARAMETERS";
GRANT SELECT ANY CUBE BUILD PROCESS TO "PARAMETERS";
GRANT ALTER ANY MEASURE FOLDER TO "PARAMETERS";
GRANT SELECT ANY MEASURE FOLDER TO "PARAMETERS";
GRANT EXEMPT DDL REDACTION POLICY TO "PARAMETERS";
GRANT EXEMPT DML REDACTION POLICY TO "PARAMETERS";
GRANT LOGMINING TO "PARAMETERS";
GRANT CREATE ANY CREDENTIAL TO "PARAMETERS";
GRANT CREATE CREDENTIAL TO "PARAMETERS";
GRANT SET CONTAINER TO "PARAMETERS";
GRANT CREATE PLUGGABLE DATABASE TO "PARAMETERS";
GRANT FLASHBACK ARCHIVE ADMINISTER TO "PARAMETERS";
GRANT EM EXPRESS CONNECT TO "PARAMETERS";
GRANT DROP ANY SQL TRANSLATION PROFILE TO "PARAMETERS";
GRANT USE ANY SQL TRANSLATION PROFILE TO "PARAMETERS";
GRANT ALTER ANY SQL TRANSLATION PROFILE TO "PARAMETERS";
GRANT CREATE ANY SQL TRANSLATION PROFILE TO "PARAMETERS";
GRANT CREATE SQL TRANSLATION PROFILE TO "PARAMETERS";
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO "PARAMETERS";
GRANT UPDATE ANY CUBE DIMENSION TO "PARAMETERS";
GRANT UPDATE ANY CUBE BUILD PROCESS TO "PARAMETERS";
GRANT DROP ANY CUBE BUILD PROCESS TO "PARAMETERS";
GRANT CREATE ANY CUBE BUILD PROCESS TO "PARAMETERS";
GRANT CREATE CUBE BUILD PROCESS TO "PARAMETERS";
GRANT INSERT ANY MEASURE FOLDER TO "PARAMETERS";
GRANT DROP ANY MEASURE FOLDER TO "PARAMETERS";
GRANT DELETE ANY MEASURE FOLDER TO "PARAMETERS";
GRANT CREATE ANY MEASURE FOLDER TO "PARAMETERS";
GRANT CREATE MEASURE FOLDER TO "PARAMETERS";
GRANT UPDATE ANY CUBE TO "PARAMETERS";
GRANT SELECT ANY CUBE TO "PARAMETERS";
GRANT DROP ANY CUBE TO "PARAMETERS";
GRANT CREATE ANY CUBE TO "PARAMETERS";
GRANT ALTER ANY CUBE TO "PARAMETERS";
GRANT CREATE CUBE TO "PARAMETERS";
GRANT SELECT ANY CUBE DIMENSION TO "PARAMETERS";
GRANT INSERT ANY CUBE DIMENSION TO "PARAMETERS";
GRANT DROP ANY CUBE DIMENSION TO "PARAMETERS";
GRANT DELETE ANY CUBE DIMENSION TO "PARAMETERS";
GRANT CREATE ANY CUBE DIMENSION TO "PARAMETERS";
GRANT ALTER ANY CUBE DIMENSION TO "PARAMETERS";
GRANT CREATE CUBE DIMENSION TO "PARAMETERS";
GRANT COMMENT ANY MINING MODEL TO "PARAMETERS";
GRANT ALTER ANY MINING MODEL TO "PARAMETERS";
GRANT SELECT ANY MINING MODEL TO "PARAMETERS";
GRANT DROP ANY MINING MODEL TO "PARAMETERS";
GRANT CREATE ANY MINING MODEL TO "PARAMETERS";
GRANT CREATE MINING MODEL TO "PARAMETERS";
GRANT EXECUTE ASSEMBLY TO "PARAMETERS";
GRANT EXECUTE ANY ASSEMBLY TO "PARAMETERS";
GRANT DROP ANY ASSEMBLY TO "PARAMETERS";
GRANT ALTER ANY ASSEMBLY TO "PARAMETERS";
GRANT CREATE ANY ASSEMBLY TO "PARAMETERS";
GRANT CREATE ASSEMBLY TO "PARAMETERS";
GRANT ALTER ANY EDITION TO "PARAMETERS";
GRANT DROP ANY EDITION TO "PARAMETERS";
GRANT CREATE ANY EDITION TO "PARAMETERS";
GRANT CREATE EXTERNAL JOB TO "PARAMETERS";
GRANT CHANGE NOTIFICATION TO "PARAMETERS";
GRANT CREATE ANY SQL PROFILE TO "PARAMETERS";
GRANT ADMINISTER ANY SQL TUNING SET TO "PARAMETERS";
GRANT ADMINISTER SQL TUNING SET TO "PARAMETERS";
GRANT ALTER ANY SQL PROFILE TO "PARAMETERS";
GRANT DROP ANY SQL PROFILE TO "PARAMETERS";
GRANT SELECT ANY TRANSACTION TO "PARAMETERS";
GRANT MANAGE SCHEDULER TO "PARAMETERS";
GRANT EXECUTE ANY CLASS TO "PARAMETERS";
GRANT EXECUTE ANY PROGRAM TO "PARAMETERS";
GRANT CREATE ANY JOB TO "PARAMETERS";
GRANT CREATE JOB TO "PARAMETERS";
GRANT ADVISOR TO "PARAMETERS";
GRANT IMPORT FULL DATABASE TO "PARAMETERS";
GRANT EXPORT FULL DATABASE TO "PARAMETERS";
GRANT GRANT ANY OBJECT PRIVILEGE TO "PARAMETERS";
GRANT FLASHBACK ANY TABLE TO "PARAMETERS";
GRANT DEBUG ANY PROCEDURE TO "PARAMETERS";
GRANT DEBUG CONNECT SESSION TO "PARAMETERS";
GRANT RESUMABLE TO "PARAMETERS";
GRANT ON COMMIT REFRESH TO "PARAMETERS";
GRANT MERGE ANY VIEW TO "PARAMETERS";
GRANT ADMINISTER DATABASE TRIGGER TO "PARAMETERS";
GRANT DROP ANY OUTLINE TO "PARAMETERS";
GRANT ALTER ANY OUTLINE TO "PARAMETERS";
GRANT CREATE ANY OUTLINE TO "PARAMETERS";
GRANT DROP ANY CONTEXT TO "PARAMETERS";
GRANT CREATE ANY CONTEXT TO "PARAMETERS";
GRANT DROP ANY DIMENSION TO "PARAMETERS";
GRANT ALTER ANY DIMENSION TO "PARAMETERS";
GRANT CREATE ANY DIMENSION TO "PARAMETERS";
GRANT CREATE DIMENSION TO "PARAMETERS";
GRANT UNDER ANY TABLE TO "PARAMETERS";
GRANT EXECUTE ANY INDEXTYPE TO "PARAMETERS";
GRANT GLOBAL QUERY REWRITE TO "PARAMETERS";
GRANT QUERY REWRITE TO "PARAMETERS";
GRANT UNDER ANY VIEW TO "PARAMETERS";
GRANT DROP ANY INDEXTYPE TO "PARAMETERS";
GRANT ALTER ANY INDEXTYPE TO "PARAMETERS";
GRANT CREATE ANY INDEXTYPE TO "PARAMETERS";
GRANT CREATE INDEXTYPE TO "PARAMETERS";
GRANT EXECUTE ANY OPERATOR TO "PARAMETERS";
GRANT DROP ANY OPERATOR TO "PARAMETERS";
GRANT ALTER ANY OPERATOR TO "PARAMETERS";
GRANT CREATE ANY OPERATOR TO "PARAMETERS";
GRANT CREATE OPERATOR TO "PARAMETERS";
GRANT EXECUTE ANY LIBRARY TO "PARAMETERS";
GRANT DROP ANY LIBRARY TO "PARAMETERS";
GRANT ALTER ANY LIBRARY TO "PARAMETERS";
GRANT CREATE ANY LIBRARY TO "PARAMETERS";
GRANT CREATE LIBRARY TO "PARAMETERS";
GRANT UNDER ANY TYPE TO "PARAMETERS";
GRANT EXECUTE ANY TYPE TO "PARAMETERS";
GRANT DROP ANY TYPE TO "PARAMETERS";
GRANT ALTER ANY TYPE TO "PARAMETERS";
GRANT CREATE ANY TYPE TO "PARAMETERS";
GRANT CREATE TYPE TO "PARAMETERS";
GRANT DROP ANY DIRECTORY TO "PARAMETERS";
GRANT CREATE ANY DIRECTORY TO "PARAMETERS";
GRANT DROP ANY MATERIALIZED VIEW TO "PARAMETERS";
GRANT ALTER ANY MATERIALIZED VIEW TO "PARAMETERS";
GRANT CREATE ANY MATERIALIZED VIEW TO "PARAMETERS";
GRANT CREATE MATERIALIZED VIEW TO "PARAMETERS";
GRANT GRANT ANY PRIVILEGE TO "PARAMETERS";
GRANT ANALYZE ANY TO "PARAMETERS";
GRANT ALTER RESOURCE COST TO "PARAMETERS";
GRANT DROP PROFILE TO "PARAMETERS";
GRANT ALTER PROFILE TO "PARAMETERS";
GRANT CREATE PROFILE TO "PARAMETERS";
GRANT DROP ANY TRIGGER TO "PARAMETERS";
GRANT ALTER ANY TRIGGER TO "PARAMETERS";
GRANT CREATE ANY TRIGGER TO "PARAMETERS";
GRANT CREATE TRIGGER TO "PARAMETERS";
GRANT EXECUTE ANY PROCEDURE TO "PARAMETERS";
GRANT DROP ANY PROCEDURE TO "PARAMETERS";
GRANT ALTER ANY PROCEDURE TO "PARAMETERS";
GRANT CREATE ANY PROCEDURE TO "PARAMETERS";
GRANT CREATE PROCEDURE TO "PARAMETERS";
GRANT FORCE ANY TRANSACTION TO "PARAMETERS";
GRANT FORCE TRANSACTION TO "PARAMETERS";
GRANT ALTER DATABASE TO "PARAMETERS";
GRANT AUDIT ANY TO "PARAMETERS";
GRANT ALTER ANY ROLE TO "PARAMETERS";
GRANT GRANT ANY ROLE TO "PARAMETERS";
GRANT DROP ANY ROLE TO "PARAMETERS";
GRANT CREATE ROLE TO "PARAMETERS";
GRANT DROP PUBLIC DATABASE LINK TO "PARAMETERS";
GRANT CREATE PUBLIC DATABASE LINK TO "PARAMETERS";
GRANT CREATE DATABASE LINK TO "PARAMETERS";
GRANT SELECT ANY SEQUENCE TO "PARAMETERS";
GRANT DROP ANY SEQUENCE TO "PARAMETERS";
GRANT ALTER ANY SEQUENCE TO "PARAMETERS";
GRANT CREATE ANY SEQUENCE TO "PARAMETERS";
GRANT CREATE SEQUENCE TO "PARAMETERS";
GRANT DROP ANY VIEW TO "PARAMETERS";
GRANT CREATE ANY VIEW TO "PARAMETERS";
GRANT CREATE VIEW TO "PARAMETERS";
GRANT DROP PUBLIC SYNONYM TO "PARAMETERS";
GRANT CREATE PUBLIC SYNONYM TO "PARAMETERS";
GRANT DROP ANY SYNONYM TO "PARAMETERS";
GRANT CREATE ANY SYNONYM TO "PARAMETERS";
GRANT CREATE SYNONYM TO "PARAMETERS";
GRANT DROP ANY INDEX TO "PARAMETERS";
GRANT ALTER ANY INDEX TO "PARAMETERS";
GRANT CREATE ANY INDEX TO "PARAMETERS";
GRANT DROP ANY CLUSTER TO "PARAMETERS";
GRANT ALTER ANY CLUSTER TO "PARAMETERS";
GRANT CREATE ANY CLUSTER TO "PARAMETERS";
GRANT CREATE CLUSTER TO "PARAMETERS";
GRANT REDEFINE ANY TABLE TO "PARAMETERS";
GRANT DELETE ANY TABLE TO "PARAMETERS";
GRANT UPDATE ANY TABLE TO "PARAMETERS";
GRANT INSERT ANY TABLE TO "PARAMETERS";
GRANT SELECT ANY TABLE TO "PARAMETERS";
GRANT COMMENT ANY TABLE TO "PARAMETERS";
GRANT LOCK ANY TABLE TO "PARAMETERS";
GRANT DROP ANY TABLE TO "PARAMETERS";
GRANT BACKUP ANY TABLE TO "PARAMETERS";
GRANT ALTER ANY TABLE TO "PARAMETERS";
GRANT CREATE ANY TABLE TO "PARAMETERS";
GRANT CREATE TABLE TO "PARAMETERS";
GRANT DROP ROLLBACK SEGMENT TO "PARAMETERS";
GRANT ALTER ROLLBACK SEGMENT TO "PARAMETERS";
GRANT CREATE ROLLBACK SEGMENT TO "PARAMETERS";
GRANT DROP USER TO "PARAMETERS";
GRANT ALTER USER TO "PARAMETERS";
GRANT BECOME USER TO "PARAMETERS";
GRANT CREATE USER TO "PARAMETERS";
GRANT UNLIMITED TABLESPACE TO "PARAMETERS";
GRANT DROP TABLESPACE TO "PARAMETERS";
GRANT MANAGE TABLESPACE TO "PARAMETERS";
GRANT ALTER TABLESPACE TO "PARAMETERS";
GRANT CREATE TABLESPACE TO "PARAMETERS";
GRANT RESTRICTED SESSION TO "PARAMETERS";
GRANT ALTER SESSION TO "PARAMETERS";
GRANT CREATE SESSION TO "PARAMETERS";
GRANT AUDIT SYSTEM TO "PARAMETERS";
GRANT ALTER SYSTEM TO "PARAMETERS";
-- new object type path: SCHEMA_EXPORT/ROLE_GRANT
 GRANT "CTXAPP" TO "PARAMETERS";
-- new object type path: SCHEMA_EXPORT/DEFAULT_ROLE
 ALTER USER "PARAMETERS" DEFAULT ROLE ALL;
-- new object type path: SCHEMA_EXPORT/TABLESPACE_QUOTA
DECLARE 
  TEMP_COUNT NUMBER; 
  SQLSTR VARCHAR2(200); 
BEGIN 
  SQLSTR := 'ALTER USER "PARAMETERS" QUOTA UNLIMITED ON "DATA01"';
  EXECUTE IMMEDIATE SQLSTR;
EXCEPTION 
  WHEN OTHERS THEN
    IF SQLCODE = -30041 THEN 
      SQLSTR := 'SELECT COUNT(*) FROM USER_TABLESPACES 
              WHERE TABLESPACE_NAME = ''DATA01'' AND CONTENTS = ''TEMPORARY''';
      EXECUTE IMMEDIATE SQLSTR INTO TEMP_COUNT;
      IF TEMP_COUNT = 1 THEN RETURN; 
      ELSE RAISE; 
      END IF;
    ELSE
      RAISE;
    END IF;
END;
/
-- new object type path: SCHEMA_EXPORT/PRE_SCHEMA/PROCACT_SCHEMA
-- CONNECT PARAMETERS

BEGIN 
sys.dbms_logrep_imp.instantiate_schema(schema_name=>SYS_CONTEXT('USERENV','CURRENT_SCHEMA'), export_db_name=>'SFT.CONEXIA.COM', inst_scn=>'3884126');
COMMIT; 
END; 
/ 
-- new object type path: SCHEMA_EXPORT/TYPE/TYPE_SPEC
-- CONNECT SYSTEM

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "PARAMETERS"."T_CODE_DESC_RECORD" 
  OID '715D82FD9793F7B3E053CB50A8C05A5D' AS OBJECT (
   CODE        VARCHAR2(50),
   DESCRIPTION VARCHAR2(250)
)
/

ALTER TYPE "PARAMETERS"."T_CODE_DESC_RECORD" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "PARAMETERS"."T_CODE_DESC_TYPE_RECORD" 
  OID '71ADD03B1F8E6D93E053CB50A8C0E57B' AS OBJECT (
   CODE        VARCHAR2(50),
   DESCRIPTION VARCHAR2(250),
   "TYPE"      VARCHAR2(50)
)
/

ALTER TYPE "PARAMETERS"."T_CODE_DESC_TYPE_RECORD" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "PARAMETERS"."T_CODE_DESC_TABLE" 
  OID '715D82FD9798F7B3E053CB50A8C05A5D' AS TABLE OF T_CODE_DESC_RECORD
/

ALTER TYPE "PARAMETERS"."T_CODE_DESC_TABLE" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "PARAMETERS"."T_CODE_DESC_TYPE_TABLE" 
  OID '71ADD03B1F946D93E053CB50A8C0E57B' AS TABLE OF T_CODE_DESC_TYPE_RECORD
/

ALTER TYPE "PARAMETERS"."T_CODE_DESC_TYPE_TABLE" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

/
-- new object type path: SCHEMA_EXPORT/TYPE/GRANT/OWNER_GRANT/OBJECT_GRANT
-- CONNECT PARAMETERS
GRANT EXECUTE ON "PARAMETERS"."T_CODE_DESC_RECORD" TO "APPROLE";
GRANT EXECUTE ON "PARAMETERS"."T_CODE_DESC_TABLE" TO "APPROLE";
-- new object type path: SCHEMA_EXPORT/TABLE/TABLE
-- CONNECT SYSTEM
CREATE TABLE "PARAMETERS"."PROCEDURE_TYPE" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 22 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."SOURCE_OF_DECISION" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 22 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 62 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE), 
	"RULE_NUMBER" NUMBER NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."QUANTITY_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 22 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE_QUANTITY_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 147 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"QUANTITY_RULES_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"QUANTITY_VALUE" NUMBER(*,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"DIAGNOSIS_RULES_ID" NUMBER(10,0), 
	"PROCEDURE_ID" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE_TIME_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 71 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"TIME_RULES_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"TIME_VALUE" NUMBER(*,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"CUSTOM_DESCRIPTION" VARCHAR2(350 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."APPLICATION_PROPERTIES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 44 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"VALUE" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."TIME_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 83 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."DIAGNOSIS_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."DIAGNOSIS_D_LIST" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 22 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE), 
	"DIAGNOSIS_ID" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 203 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"PROCEDURE_TYPE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."PROCEDURE_RULES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 144 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"RULES_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."DIAGNOSIS" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 145 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "PARAMETERS"."STATUS" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 42 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CODE" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
-- new object type path: SCHEMA_EXPORT/TABLE/GRANT/OWNER_GRANT/OBJECT_GRANT
-- CONNECT PARAMETERS
GRANT DELETE ON "PARAMETERS"."SOURCE_OF_DECISION" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."SOURCE_OF_DECISION" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."SOURCE_OF_DECISION" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."SOURCE_OF_DECISION" TO "APPROLE";
GRANT REFERENCES ON "PARAMETERS"."SOURCE_OF_DECISION" TO "TRANSACTIONAL";
GRANT DELETE ON "PARAMETERS"."STATUS" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."STATUS" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."STATUS" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."STATUS" TO "APPROLE";
GRANT REFERENCES ON "PARAMETERS"."STATUS" TO "TRANSACTIONAL";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."DIAGNOSIS_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."DIAGNOSIS_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."DIAGNOSIS_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."DIAGNOSIS_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."DIAGNOSIS_D_LIST" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."DIAGNOSIS_D_LIST" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."DIAGNOSIS_D_LIST" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."DIAGNOSIS_D_LIST" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."APPLICATION_PROPERTIES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."APPLICATION_PROPERTIES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."APPLICATION_PROPERTIES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."APPLICATION_PROPERTIES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."QUANTITY_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."QUANTITY_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."QUANTITY_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."QUANTITY_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."TIME_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."TIME_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."TIME_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."TIME_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_TIME_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_TIME_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_TIME_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_TIME_RULES" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."DIAGNOSIS" TO "APPROLE";
GRANT REFERENCES ON "PARAMETERS"."DIAGNOSIS" TO "TRANSACTIONAL";
GRANT DELETE ON "PARAMETERS"."DIAGNOSIS" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."DIAGNOSIS" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."DIAGNOSIS" TO "APPROLE";
GRANT DELETE ON "PARAMETERS"."PROCEDURE" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE" TO "APPROLE";
GRANT REFERENCES ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT ALTER ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT DELETE ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT INDEX ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT INSERT ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT SELECT ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT READ ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT ON COMMIT REFRESH ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT QUERY REWRITE ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT DEBUG ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT FLASHBACK ON "PARAMETERS"."PROCEDURE" TO "TRANSACTIONAL";
GRANT DELETE ON "PARAMETERS"."PROCEDURE_TYPE" TO "APPROLE";
GRANT INSERT ON "PARAMETERS"."PROCEDURE_TYPE" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_TYPE" TO "APPROLE";
GRANT UPDATE ON "PARAMETERS"."PROCEDURE_TYPE" TO "APPROLE";
GRANT SELECT ON "PARAMETERS"."PROCEDURE_TYPE" TO "TRANSACTIONAL";
-- new object type path: SCHEMA_EXPORT/TABLE/IDENTITY_COLUMN
-- CONNECT SYSTEM
ALTER TABLE "PARAMETERS"."DIAGNOSIS" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_TYPE" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."SOURCE_OF_DECISION" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."STATUS" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."DIAGNOSIS_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."DIAGNOSIS_D_LIST" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."APPLICATION_PROPERTIES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."QUANTITY_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."TIME_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_TIME_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "PARAMETERS"."PROCEDURE_QUANTITY_RULES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
-- new object type path: SCHEMA_EXPORT/FUNCTION/FUNCTION
-- CONNECT PARAMETERS
CREATE EDITIONABLE FUNCTION            GET_DIAGNOSIS (p_criteria IN VARCHAR2)

RETURN T_CODE_DESC_TABLE

AS

   v_table    T_CODE_DESC_TABLE;

   v_criteria VARCHAR2(252) := '%'||p_criteria||'%';

BEGIN

SELECT             T_CODE_DESC_RECORD(CODE, DESCRIPTION)

BULK COLLECT INTO  v_table

FROM               PARAMETERS.DIAGNOSIS

WHERE              upper(code) = upper(p_criteria)

AND                ROWNUM <= 21

;

if (v_table.COUNT > 0) then

RETURN v_table;

end if

;

SELECT             T_CODE_DESC_RECORD(CODE, DESCRIPTION)

BULK COLLECT INTO  v_table

FROM               PARAMETERS.DIAGNOSIS

WHERE              -- ((CONTAINS(description, v_criteria) > 0))

				   UPPER(description) LIKE UPPER(v_criteria)

AND                ROWNUM <= 21

;

RETURN v_table;

END;
/
CREATE EDITIONABLE FUNCTION            GET_PROCEDURES (p_procedure IN VARCHAR2, p_type IN VARCHAR2) RETURN T_CODE_DESC_TYPE_TABLE
AS
   v_table     T_CODE_DESC_TYPE_TABLE;
   v_procedure VARCHAR2(252) := '%'||UPPER(p_procedure)||'%';
   v_type      VARCHAR2(250) := '%'||UPPER(p_type)||'%';
BEGIN
  	
   SELECT T_CODE_DESC_TYPE_RECORD(CODE1, DESCRIPTION, CODE2)
   BULK COLLECT INTO v_table
   FROM (
         SELECT      prc.CODE AS code1, prc.DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE      prc
         INNER JOIN  PARAMETERS.PROCEDURE_TYPE typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         WHERE
                     upper(prc.code) = upper(p_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
                     
         UNION
         SELECT      prc.CODE AS code1, cus.CUSTOM_DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE                    prc
         JOIN        PARAMETERS.PROCEDURE_TYPE               typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         INNER JOIN  PARAMETERS.PROCEDURE_CUSTOM_DESCRIPTION cus ON cus.PROCEDURE_ID = prc.ID
         WHERE
                     upper(prc.code) = upper(p_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         -- ORDER BY 1
   )
   WHERE
         ROWNUM <= 21
   ;

   if (v_table.COUNT > 0) then
      RETURN v_table;
   end if;
  
   SELECT T_CODE_DESC_TYPE_RECORD(CODE1, DESCRIPTION, CODE2)
   BULK COLLECT INTO v_table
   FROM (
         SELECT      prc.CODE AS code1, prc.DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE      prc
         INNER JOIN  PARAMETERS.PROCEDURE_TYPE typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         WHERE
         --          ((CONTAINS(upper(prc.description), upper(p_procedure))>0))
         --    AND   ((CONTAINS(upper(typ.description), upper(p_type))>0))
			          (UPPER(prc.CODE) LIKE v_procedure OR UPPER(prc.DESCRIPTION) LIKE v_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         UNION
         SELECT      prc.CODE AS code1, cus.CUSTOM_DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE                    prc
         JOIN        PARAMETERS.PROCEDURE_TYPE               typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         INNER JOIN  PARAMETERS.PROCEDURE_CUSTOM_DESCRIPTION cus ON cus.PROCEDURE_ID = prc.ID
         WHERE
         --          ((CONTAINS(upper(prc.description), upper(p_procedure))>0))
         --     AND  ((CONTAINS(upper(typ.description), upper(p_type))>0))
                     (UPPER(cus.CUSTOM_DESCRIPTION) LIKE v_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         -- ORDER BY 1
   )
   WHERE
         ROWNUM <= 21
   ;
   RETURN v_table;
END;
/
CREATE EDITIONABLE FUNCTION                                  GT_PRC (p_procedure IN VARCHAR2, p_type IN VARCHAR2) RETURN T_CODE_DESC_TYPE_TABLE
AS
   v_table     T_CODE_DESC_TYPE_TABLE;
   v_procedure VARCHAR2(252) := '%'||UPPER(p_procedure)||'%';
   v_type      VARCHAR2(250) := '%'||UPPER(p_type)||'%';
BEGIN
  	
   SELECT T_CODE_DESC_TYPE_RECORD(CODE1, DESCRIPTION, CODE2)
   BULK COLLECT INTO v_table
   FROM (
         SELECT      prc.CODE AS code1, prc.DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE      prc
         INNER JOIN  PARAMETERS.PROCEDURE_TYPE typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         WHERE
                     upper(prc.code) = upper(p_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
                     
         UNION
         SELECT      prc.CODE AS code1, cus.CUSTOM_DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE                    prc
         JOIN        PARAMETERS.PROCEDURE_TYPE               typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         INNER JOIN  PARAMETERS.PROCEDURE_CUSTOM_DESCRIPTION cus ON cus.PROCEDURE_ID = prc.ID
         WHERE
                     upper(prc.code) = upper(p_procedure)
               AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         -- ORDER BY 1
   )
   WHERE
         ROWNUM <= 21
   ;

   if (v_table.COUNT > 0) then
      RETURN v_table;
   end if;
  
   SELECT T_CODE_DESC_TYPE_RECORD(CODE1, DESCRIPTION, CODE2)
   BULK COLLECT INTO v_table
   FROM (
         SELECT      prc.CODE AS code1, prc.DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE      prc
         INNER JOIN  PARAMETERS.PROCEDURE_TYPE typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         WHERE
                   ((CONTAINS((prc.description), upper(p_procedure))>0))
             AND   ((CONTAINS((typ.description), upper(p_type))>0))
		--           (UPPER(prc.CODE) LIKE v_procedure OR UPPER(prc.DESCRIPTION) LIKE v_procedure)
        --       AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         UNION
         SELECT      prc.CODE AS code1, cus.CUSTOM_DESCRIPTION, typ.CODE AS code2
         FROM
                     PARAMETERS.PROCEDURE                    prc
         JOIN        PARAMETERS.PROCEDURE_TYPE               typ ON typ.ID = prc.PROCEDURE_TYPE_ID
         INNER JOIN  PARAMETERS.PROCEDURE_CUSTOM_DESCRIPTION cus ON cus.PROCEDURE_ID = prc.ID
         WHERE
                  ((CONTAINS((prc.description), upper(p_procedure))>0))
             AND  ((CONTAINS((typ.description), upper(p_type))>0))
        --           (UPPER(cus.CUSTOM_DESCRIPTION) LIKE v_procedure)
        --       AND   (p_type = ''  OR UPPER(typ.CODE) LIKE v_type)
         -- ORDER BY 1
   )
   WHERE
         ROWNUM <= 21
   ;
   RETURN v_table;
END;
/
-- new object type path: SCHEMA_EXPORT/FUNCTION/GRANT/OWNER_GRANT/OBJECT_GRANT
GRANT EXECUTE ON "PARAMETERS"."GET_DIAGNOSIS" TO "APPROLE";
GRANT EXECUTE ON "PARAMETERS"."GET_PROCEDURES" TO "APPROLE";
-- new object type path: SCHEMA_EXPORT/FUNCTION/ALTER_FUNCTION

ALTER FUNCTION "PARAMETERS"."GET_DIAGNOSIS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:13:28'
/

ALTER FUNCTION "PARAMETERS"."GET_PROCEDURES" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:13:28'
/

ALTER FUNCTION "PARAMETERS"."GT_PRC" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

 REUSE SETTINGS TIMESTAMP '2018-09-13 06:22:09'
/
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/INDEX
CREATE INDEX "PARAMETERS"."PAR_DIAG_CODE_IDX" ON "PARAMETERS"."DIAGNOSIS" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PAR_DIAG_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PAR_PROC_DATE_DEL_IDX" ON "PARAMETERS"."PROCEDURE" ("DATE_DELETE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PAR_PROC_DATE_DEL_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PAR_PROC_CODE_IDX" ON "PARAMETERS"."PROCEDURE" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PAR_PROC_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PROC_PROCEDURE_TYPE_ID_IDX" ON "PARAMETERS"."PROCEDURE" ("PROCEDURE_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_PROCEDURE_TYPE_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PAR_PROC_TYP_CODE_IDX" ON "PARAMETERS"."PROCEDURE_TYPE" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PAR_PROC_TYP_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."SOURCE_OF_DECISION_CODE_IDX" ON "PARAMETERS"."SOURCE_OF_DECISION" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."SOURCE_OF_DECISION_CODE_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."STATUS_CODE_IDX" ON "PARAMETERS"."STATUS" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."STATUS_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PROC_CUST_DESC_PROC_ID_IDX" ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_CUST_DESC_PROC_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."DIAGNOSIS_RULES_CODE_IDX" ON "PARAMETERS"."DIAGNOSIS_RULES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."DIAGNOSIS_RULES_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."DIAG_D_LIST_DIAGNOSIS_ID_IDX" ON "PARAMETERS"."DIAGNOSIS_D_LIST" ("DIAGNOSIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."DIAG_D_LIST_DIAGNOSIS_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."DIAGNOSIS_D_LIST_CODE_IDX" ON "PARAMETERS"."DIAGNOSIS_D_LIST" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."DIAGNOSIS_D_LIST_CODE_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PROC_DIAG_RUL_DIAG_RUL_ID_IDX" ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ("DIAGNOSIS_RULES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_DIAG_RUL_DIAG_RUL_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PROC_DIAG_RUL_PROC_ID_IDX" ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_DIAG_RUL_PROC_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."APP_PROPERTIES_CODE_IDX" ON "PARAMETERS"."APPLICATION_PROPERTIES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."APP_PROPERTIES_CODE_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."RULES_CODE_IDX" ON "PARAMETERS"."RULES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."RULES_CODE_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."RULES_CODE_RN_IDX" ON "PARAMETERS"."RULES" ("CODE", "RULE_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."RULES_CODE_RN_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PROC_RULES_RULES_ID_IDX" ON "PARAMETERS"."PROCEDURE_RULES" ("RULES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_RULES_RULES_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PROC_RULES_PROC_ID_IDX" ON "PARAMETERS"."PROCEDURE_RULES" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_RULES_PROC_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."QUANTITY_RULES_CODE_IDX" ON "PARAMETERS"."QUANTITY_RULES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."QUANTITY_RULES_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."TIME_RULES_CODE_IDX" ON "PARAMETERS"."TIME_RULES" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."TIME_RULES_CODE_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PROC_TIME_RUL_TIME_RUL_ID_IDX" ON "PARAMETERS"."PROCEDURE_TIME_RULES" ("TIME_RULES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_TIME_RUL_TIME_RUL_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PROC_TIME_RUL_PROC_ID_IDX" ON "PARAMETERS"."PROCEDURE_TIME_RULES" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_TIME_RUL_PROC_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "PARAMETERS"."PROC_QTY_RULES_QTY_RUL_ID_IDX" ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ("QUANTITY_RULES_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_QTY_RULES_QTY_RUL_ID_IDX" NOPARALLEL;
CREATE INDEX "PARAMETERS"."PROC_QTY_RULES_PROC_ID_IDX" ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PROC_QTY_RULES_PROC_ID_IDX" NOPARALLEL;
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/FUNCTIONAL_INDEX/INDEX
CREATE INDEX "PARAMETERS"."PAR_DIAG_CODE_FX_IDX" ON "PARAMETERS"."DIAGNOSIS" (UPPER("CODE")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."PAR_DIAG_CODE_FX_IDX" NOPARALLEL;
-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/CONSTRAINT
-- CONNECT SYSTEM
ALTER TABLE "PARAMETERS"."DIAGNOSIS" ADD CONSTRAINT "DIAGNOSIS_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."DIAGNOSIS_PK" ON "PARAMETERS"."DIAGNOSIS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE" ADD CONSTRAINT "PROCEDURE_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_PK" ON "PARAMETERS"."PROCEDURE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_TYPE" ADD CONSTRAINT "PROCEDURE_TYPE_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_TYPE_PK" ON "PARAMETERS"."PROCEDURE_TYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."SOURCE_OF_DECISION" ADD CONSTRAINT "SOURCE_OF_DECISION_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."SOURCE_OF_DECISION_PK" ON "PARAMETERS"."SOURCE_OF_DECISION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."STATUS" ADD CONSTRAINT "STATUS_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."STATUS_PK" ON "PARAMETERS"."STATUS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" ADD CONSTRAINT "PROCE_CUSTOM_DESCRIP_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCE_CUSTOM_DESCRIP_PK" ON "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."DIAGNOSIS_RULES" ADD CONSTRAINT "DIAGNOSIS_RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."DIAGNOSIS_RULES_PK" ON "PARAMETERS"."DIAGNOSIS_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."DIAGNOSIS_D_LIST" ADD CONSTRAINT "DIAGNOSIS_D_LIST_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."DIAGNOSIS_D_LIST_PK" ON "PARAMETERS"."DIAGNOSIS_D_LIST" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ADD CONSTRAINT "PROCEDURE_DIAGNOSIS_RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES_PK" ON "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."APPLICATION_PROPERTIES" ADD CONSTRAINT "PK_APPLICATION_PROPERTIES" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PK_APPLICATION_PROPERTIES" ON "PARAMETERS"."APPLICATION_PROPERTIES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."RULES" ADD CONSTRAINT "RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."RULES_PK" ON "PARAMETERS"."RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_RULES" ADD CONSTRAINT "PROCEDURE_RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_RULES_PK" ON "PARAMETERS"."PROCEDURE_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."QUANTITY_RULES" ADD CONSTRAINT "QUANTITY_RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."QUANTITY_RULES_PK" ON "PARAMETERS"."QUANTITY_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."TIME_RULES" ADD CONSTRAINT "TIME_RULES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."TIME_RULES_PK" ON "PARAMETERS"."TIME_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_TIME_RULES" ADD CONSTRAINT "PROCEDURE_TIM_RUL_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_TIM_RUL_PK" ON "PARAMETERS"."PROCEDURE_TIME_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ADD CONSTRAINT "PROCEDURE_QTY_RUL_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "PARAMETERS"."PROCEDURE_QTY_RUL_PK" ON "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/STATISTICS/FUNCTIONAL_INDEX/INDEX_STATISTICS
-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/REF_CONSTRAINT
ALTER TABLE "PARAMETERS"."PROCEDURE" ADD CONSTRAINT "PROC_PROC_TYPE_ID_FK" FOREIGN KEY ("PROCEDURE_TYPE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE_TYPE" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_CUSTOM_DESCRIPTION" ADD CONSTRAINT "PROCE_CUSTOM_DESCRIP_PROC_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."DIAGNOSIS_D_LIST" ADD CONSTRAINT "DIAGNOSIS_D_LIST_DIAGONOSIS_FK" FOREIGN KEY ("DIAGNOSIS_ID")
	  REFERENCES "PARAMETERS"."DIAGNOSIS" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ADD CONSTRAINT "PROC_DIAG_RULES_DIAG_RULES_FK" FOREIGN KEY ("DIAGNOSIS_RULES_ID")
	  REFERENCES "PARAMETERS"."DIAGNOSIS_RULES" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_DIAGNOSIS_RULES" ADD CONSTRAINT "PROC_DIAG_RULES_PROC_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_RULES" ADD CONSTRAINT "PROCEDURE_RULES_RULES_FK" FOREIGN KEY ("RULES_ID")
	  REFERENCES "PARAMETERS"."RULES" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_RULES" ADD CONSTRAINT "PROCEDURE_RULES_PROCEDURE_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_TIME_RULES" ADD CONSTRAINT "PROCEDURE_TIM_RUL_TIM_RULES_FK" FOREIGN KEY ("TIME_RULES_ID")
	  REFERENCES "PARAMETERS"."TIME_RULES" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_TIME_RULES" ADD CONSTRAINT "PROCEDURE_TIM_RUL_PROCEDURE_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ADD CONSTRAINT "PROCEDURE_QTY_RUL_QTY_RULES_FK" FOREIGN KEY ("QUANTITY_RULES_ID")
	  REFERENCES "PARAMETERS"."QUANTITY_RULES" ("ID") ENABLE;
ALTER TABLE "PARAMETERS"."PROCEDURE_QUANTITY_RULES" ADD CONSTRAINT "PROCEDURE_QTY_RUL_PROCEDURE_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
-- new object type path: SCHEMA_EXPORT/TABLE/STATISTICS/TABLE_STATISTICS
-- new object type path: SCHEMA_EXPORT/STATISTICS/MARKER
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/DOMAIN_INDEX/INDEX
-- CONNECT PARAMETERS

BEGIN 
ctxsys.driimp.create_index('CTX_PAR_DIAG_IDX','DIAGNOSIS',USER,
'ID','2','DESCRIPTION','1',
'250','102','8130','103',
NULL, NULL, NULL, 0,'Y','ON COMMIT','67108864',NULL, NULL, NULL);


ctxsys.driimp.set_object('DATASTORE','MULTI_COLUMN_DATASTORE',1);
ctxsys.driimp.set_value('COLUMNS','CODE,DESCRIPTION');

ctxsys.driimp.set_object('DATATYPE','NONE_DATATYPE',0);

ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);

ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);

ctxsys.driimp.set_object('SECTION_GROUP','AUTO_SECTION_GROUP',0);

ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);

ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');

ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');

ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');

ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');

commit;
COMMIT; 
END; 
/ 
CREATE INDEX "PARAMETERS"."CTX_PAR_DIAG_IDX" ON "PARAMETERS"."DIAGNOSIS" ("DESCRIPTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT"  PARAMETERS ('datastore  MULTI_STORE_COD_DESC
section group  ctxsys.auto_section_group
sync    (on commit)')PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."CTX_PAR_DIAG_IDX" NOPARALLEL;

BEGIN 
ctxsys.driimp.create_index('CTX_PAR_PROC_TYP_IDX','PROCEDURE_TYPE',USER,
'ID','2','DESCRIPTION','1',
'50','3','8130','4',
NULL, NULL, NULL, 0,'Y','ON COMMIT','67108864',NULL, NULL, NULL);


ctxsys.driimp.set_object('DATASTORE','MULTI_COLUMN_DATASTORE',1);
ctxsys.driimp.set_value('COLUMNS','CODE,DESCRIPTION');

ctxsys.driimp.set_object('DATATYPE','NONE_DATATYPE',0);

ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);

ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);

ctxsys.driimp.set_object('SECTION_GROUP','AUTO_SECTION_GROUP',0);

ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);

ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');

ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');

ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');

ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');

commit;
COMMIT; 
END; 
/ 
CREATE INDEX "PARAMETERS"."CTX_PAR_PROC_TYP_IDX" ON "PARAMETERS"."PROCEDURE_TYPE" ("DESCRIPTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT"  PARAMETERS ('datastore  MULTI_STORE_COD_DESC
section group  ctxsys.auto_section_group
sync    (on commit)')PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."CTX_PAR_PROC_TYP_IDX" NOPARALLEL;

BEGIN 
ctxsys.driimp.create_index('CTX_PAR_PROC_IDX','PROCEDURE',USER,
'ID','2','DESCRIPTION','1',
'250','134','8130','135',
NULL, NULL, NULL, 0,'Y','ON COMMIT','67108864',NULL, NULL, NULL);


ctxsys.driimp.set_object('DATASTORE','MULTI_COLUMN_DATASTORE',1);
ctxsys.driimp.set_value('COLUMNS','CODE,DESCRIPTION');

ctxsys.driimp.set_object('DATATYPE','NONE_DATATYPE',0);

ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);

ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);

ctxsys.driimp.set_object('SECTION_GROUP','AUTO_SECTION_GROUP',0);

ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);

ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');

ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');

ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');

ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');

commit;
COMMIT; 
END; 
/ 
CREATE INDEX "PARAMETERS"."CTX_PAR_PROC_IDX" ON "PARAMETERS"."PROCEDURE" ("DESCRIPTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT"  PARAMETERS ('datastore  MULTI_STORE_COD_DESC
section group  ctxsys.auto_section_group
sync    (on commit)')PARALLEL 1 ;

  ALTER INDEX "PARAMETERS"."CTX_PAR_PROC_IDX" NOPARALLEL;
