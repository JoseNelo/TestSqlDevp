-- CONNECT SYS
ALTER SESSION SET EVENTS '10150 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10904 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '25475 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10407 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '10851 TRACE NAME CONTEXT FOREVER, LEVEL 1';
ALTER SESSION SET EVENTS '22830 TRACE NAME CONTEXT FOREVER, LEVEL 192 ';
-- new object type path: SCHEMA_EXPORT/USER
-- CONNECT SYSTEM
 CREATE USER "TRANSACTIONAL" IDENTIFIED BY VALUES 'S:5DDA6764A97F201F3A3462D4A18DC096A8961F78BC2D626A4A259F06C5CE;H:B382CAFB9BB9DD4483B54AF2C686A3DF;T:D5B0D53DD6E88E56CD1C55E205FA989A6ABF6369BEDFE4CF9AE3DBE45E73F7A5EE27F1E5320092C55CF1674988DD3EAE5C75FD2A7B20A6A0EF37BE371E8B99A2B3AF0CB3C7587C01E5BA70450F8F4B02;2EB4567210B5EECA'
      DEFAULT TABLESPACE "DATA01"
      TEMPORARY TABLESPACE "TEMP";
-- new object type path: SCHEMA_EXPORT/SYSTEM_GRANT
GRANT READ ANY TABLE TO "TRANSACTIONAL";
GRANT ALTER ANY CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT SELECT ANY CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT ALTER ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT SELECT ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT EXEMPT DDL REDACTION POLICY TO "TRANSACTIONAL";
GRANT EXEMPT DML REDACTION POLICY TO "TRANSACTIONAL";
GRANT LOGMINING TO "TRANSACTIONAL";
GRANT CREATE ANY CREDENTIAL TO "TRANSACTIONAL";
GRANT CREATE CREDENTIAL TO "TRANSACTIONAL";
GRANT SET CONTAINER TO "TRANSACTIONAL";
GRANT CREATE PLUGGABLE DATABASE TO "TRANSACTIONAL";
GRANT FLASHBACK ARCHIVE ADMINISTER TO "TRANSACTIONAL";
GRANT EM EXPRESS CONNECT TO "TRANSACTIONAL";
GRANT DROP ANY SQL TRANSLATION PROFILE TO "TRANSACTIONAL";
GRANT USE ANY SQL TRANSLATION PROFILE TO "TRANSACTIONAL";
GRANT ALTER ANY SQL TRANSLATION PROFILE TO "TRANSACTIONAL";
GRANT CREATE ANY SQL TRANSLATION PROFILE TO "TRANSACTIONAL";
GRANT CREATE SQL TRANSLATION PROFILE TO "TRANSACTIONAL";
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO "TRANSACTIONAL";
GRANT UPDATE ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT UPDATE ANY CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT DROP ANY CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT CREATE ANY CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT CREATE CUBE BUILD PROCESS TO "TRANSACTIONAL";
GRANT INSERT ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT DROP ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT DELETE ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT CREATE ANY MEASURE FOLDER TO "TRANSACTIONAL";
GRANT CREATE MEASURE FOLDER TO "TRANSACTIONAL";
GRANT UPDATE ANY CUBE TO "TRANSACTIONAL";
GRANT SELECT ANY CUBE TO "TRANSACTIONAL";
GRANT DROP ANY CUBE TO "TRANSACTIONAL";
GRANT CREATE ANY CUBE TO "TRANSACTIONAL";
GRANT ALTER ANY CUBE TO "TRANSACTIONAL";
GRANT CREATE CUBE TO "TRANSACTIONAL";
GRANT SELECT ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT INSERT ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT DROP ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT DELETE ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT CREATE ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT ALTER ANY CUBE DIMENSION TO "TRANSACTIONAL";
GRANT CREATE CUBE DIMENSION TO "TRANSACTIONAL";
GRANT COMMENT ANY MINING MODEL TO "TRANSACTIONAL";
GRANT ALTER ANY MINING MODEL TO "TRANSACTIONAL";
GRANT SELECT ANY MINING MODEL TO "TRANSACTIONAL";
GRANT DROP ANY MINING MODEL TO "TRANSACTIONAL";
GRANT CREATE ANY MINING MODEL TO "TRANSACTIONAL";
GRANT CREATE MINING MODEL TO "TRANSACTIONAL";
GRANT EXECUTE ASSEMBLY TO "TRANSACTIONAL";
GRANT EXECUTE ANY ASSEMBLY TO "TRANSACTIONAL";
GRANT DROP ANY ASSEMBLY TO "TRANSACTIONAL";
GRANT ALTER ANY ASSEMBLY TO "TRANSACTIONAL";
GRANT CREATE ANY ASSEMBLY TO "TRANSACTIONAL";
GRANT CREATE ASSEMBLY TO "TRANSACTIONAL";
GRANT ALTER ANY EDITION TO "TRANSACTIONAL";
GRANT DROP ANY EDITION TO "TRANSACTIONAL";
GRANT CREATE ANY EDITION TO "TRANSACTIONAL";
GRANT CREATE EXTERNAL JOB TO "TRANSACTIONAL";
GRANT CHANGE NOTIFICATION TO "TRANSACTIONAL";
GRANT CREATE ANY SQL PROFILE TO "TRANSACTIONAL";
GRANT ADMINISTER ANY SQL TUNING SET TO "TRANSACTIONAL";
GRANT ADMINISTER SQL TUNING SET TO "TRANSACTIONAL";
GRANT ALTER ANY SQL PROFILE TO "TRANSACTIONAL";
GRANT DROP ANY SQL PROFILE TO "TRANSACTIONAL";
GRANT SELECT ANY TRANSACTION TO "TRANSACTIONAL";
GRANT MANAGE SCHEDULER TO "TRANSACTIONAL";
GRANT EXECUTE ANY CLASS TO "TRANSACTIONAL";
GRANT EXECUTE ANY PROGRAM TO "TRANSACTIONAL";
GRANT CREATE ANY JOB TO "TRANSACTIONAL";
GRANT CREATE JOB TO "TRANSACTIONAL";
GRANT ADVISOR TO "TRANSACTIONAL";
GRANT IMPORT FULL DATABASE TO "TRANSACTIONAL";
GRANT EXPORT FULL DATABASE TO "TRANSACTIONAL";
GRANT GRANT ANY OBJECT PRIVILEGE TO "TRANSACTIONAL";
GRANT FLASHBACK ANY TABLE TO "TRANSACTIONAL";
GRANT DEBUG ANY PROCEDURE TO "TRANSACTIONAL";
GRANT DEBUG CONNECT SESSION TO "TRANSACTIONAL";
GRANT RESUMABLE TO "TRANSACTIONAL";
GRANT ON COMMIT REFRESH TO "TRANSACTIONAL";
GRANT MERGE ANY VIEW TO "TRANSACTIONAL";
GRANT ADMINISTER DATABASE TRIGGER TO "TRANSACTIONAL";
GRANT DROP ANY OUTLINE TO "TRANSACTIONAL";
GRANT ALTER ANY OUTLINE TO "TRANSACTIONAL";
GRANT CREATE ANY OUTLINE TO "TRANSACTIONAL";
GRANT DROP ANY CONTEXT TO "TRANSACTIONAL";
GRANT CREATE ANY CONTEXT TO "TRANSACTIONAL";
GRANT DROP ANY DIMENSION TO "TRANSACTIONAL";
GRANT ALTER ANY DIMENSION TO "TRANSACTIONAL";
GRANT CREATE ANY DIMENSION TO "TRANSACTIONAL";
GRANT CREATE DIMENSION TO "TRANSACTIONAL";
GRANT UNDER ANY TABLE TO "TRANSACTIONAL";
GRANT EXECUTE ANY INDEXTYPE TO "TRANSACTIONAL";
GRANT GLOBAL QUERY REWRITE TO "TRANSACTIONAL";
GRANT QUERY REWRITE TO "TRANSACTIONAL";
GRANT UNDER ANY VIEW TO "TRANSACTIONAL";
GRANT DROP ANY INDEXTYPE TO "TRANSACTIONAL";
GRANT ALTER ANY INDEXTYPE TO "TRANSACTIONAL";
GRANT CREATE ANY INDEXTYPE TO "TRANSACTIONAL";
GRANT CREATE INDEXTYPE TO "TRANSACTIONAL";
GRANT EXECUTE ANY OPERATOR TO "TRANSACTIONAL";
GRANT DROP ANY OPERATOR TO "TRANSACTIONAL";
GRANT ALTER ANY OPERATOR TO "TRANSACTIONAL";
GRANT CREATE ANY OPERATOR TO "TRANSACTIONAL";
GRANT CREATE OPERATOR TO "TRANSACTIONAL";
GRANT EXECUTE ANY LIBRARY TO "TRANSACTIONAL";
GRANT DROP ANY LIBRARY TO "TRANSACTIONAL";
GRANT ALTER ANY LIBRARY TO "TRANSACTIONAL";
GRANT CREATE ANY LIBRARY TO "TRANSACTIONAL";
GRANT CREATE LIBRARY TO "TRANSACTIONAL";
GRANT UNDER ANY TYPE TO "TRANSACTIONAL";
GRANT EXECUTE ANY TYPE TO "TRANSACTIONAL";
GRANT DROP ANY TYPE TO "TRANSACTIONAL";
GRANT ALTER ANY TYPE TO "TRANSACTIONAL";
GRANT CREATE ANY TYPE TO "TRANSACTIONAL";
GRANT CREATE TYPE TO "TRANSACTIONAL";
GRANT DROP ANY DIRECTORY TO "TRANSACTIONAL";
GRANT CREATE ANY DIRECTORY TO "TRANSACTIONAL";
GRANT DROP ANY MATERIALIZED VIEW TO "TRANSACTIONAL";
GRANT ALTER ANY MATERIALIZED VIEW TO "TRANSACTIONAL";
GRANT CREATE ANY MATERIALIZED VIEW TO "TRANSACTIONAL";
GRANT CREATE MATERIALIZED VIEW TO "TRANSACTIONAL";
GRANT GRANT ANY PRIVILEGE TO "TRANSACTIONAL";
GRANT ANALYZE ANY TO "TRANSACTIONAL";
GRANT ALTER RESOURCE COST TO "TRANSACTIONAL";
GRANT DROP PROFILE TO "TRANSACTIONAL";
GRANT ALTER PROFILE TO "TRANSACTIONAL";
GRANT CREATE PROFILE TO "TRANSACTIONAL";
GRANT DROP ANY TRIGGER TO "TRANSACTIONAL";
GRANT ALTER ANY TRIGGER TO "TRANSACTIONAL";
GRANT CREATE ANY TRIGGER TO "TRANSACTIONAL";
GRANT CREATE TRIGGER TO "TRANSACTIONAL";
GRANT EXECUTE ANY PROCEDURE TO "TRANSACTIONAL";
GRANT DROP ANY PROCEDURE TO "TRANSACTIONAL";
GRANT ALTER ANY PROCEDURE TO "TRANSACTIONAL";
GRANT CREATE ANY PROCEDURE TO "TRANSACTIONAL";
GRANT CREATE PROCEDURE TO "TRANSACTIONAL";
GRANT FORCE ANY TRANSACTION TO "TRANSACTIONAL";
GRANT FORCE TRANSACTION TO "TRANSACTIONAL";
GRANT ALTER DATABASE TO "TRANSACTIONAL";
GRANT AUDIT ANY TO "TRANSACTIONAL";
GRANT ALTER ANY ROLE TO "TRANSACTIONAL";
GRANT GRANT ANY ROLE TO "TRANSACTIONAL";
GRANT DROP ANY ROLE TO "TRANSACTIONAL";
GRANT CREATE ROLE TO "TRANSACTIONAL";
GRANT DROP PUBLIC DATABASE LINK TO "TRANSACTIONAL";
GRANT CREATE PUBLIC DATABASE LINK TO "TRANSACTIONAL";
GRANT CREATE DATABASE LINK TO "TRANSACTIONAL";
GRANT SELECT ANY SEQUENCE TO "TRANSACTIONAL";
GRANT DROP ANY SEQUENCE TO "TRANSACTIONAL";
GRANT ALTER ANY SEQUENCE TO "TRANSACTIONAL";
GRANT CREATE ANY SEQUENCE TO "TRANSACTIONAL";
GRANT CREATE SEQUENCE TO "TRANSACTIONAL";
GRANT DROP ANY VIEW TO "TRANSACTIONAL";
GRANT CREATE ANY VIEW TO "TRANSACTIONAL";
GRANT CREATE VIEW TO "TRANSACTIONAL";
GRANT DROP PUBLIC SYNONYM TO "TRANSACTIONAL";
GRANT CREATE PUBLIC SYNONYM TO "TRANSACTIONAL";
GRANT DROP ANY SYNONYM TO "TRANSACTIONAL";
GRANT CREATE ANY SYNONYM TO "TRANSACTIONAL";
GRANT CREATE SYNONYM TO "TRANSACTIONAL";
GRANT DROP ANY INDEX TO "TRANSACTIONAL";
GRANT ALTER ANY INDEX TO "TRANSACTIONAL";
GRANT CREATE ANY INDEX TO "TRANSACTIONAL";
GRANT DROP ANY CLUSTER TO "TRANSACTIONAL";
GRANT ALTER ANY CLUSTER TO "TRANSACTIONAL";
GRANT CREATE ANY CLUSTER TO "TRANSACTIONAL";
GRANT CREATE CLUSTER TO "TRANSACTIONAL";
GRANT REDEFINE ANY TABLE TO "TRANSACTIONAL";
GRANT DELETE ANY TABLE TO "TRANSACTIONAL";
GRANT UPDATE ANY TABLE TO "TRANSACTIONAL";
GRANT INSERT ANY TABLE TO "TRANSACTIONAL";
GRANT SELECT ANY TABLE TO "TRANSACTIONAL";
GRANT COMMENT ANY TABLE TO "TRANSACTIONAL";
GRANT LOCK ANY TABLE TO "TRANSACTIONAL";
GRANT DROP ANY TABLE TO "TRANSACTIONAL";
GRANT BACKUP ANY TABLE TO "TRANSACTIONAL";
GRANT ALTER ANY TABLE TO "TRANSACTIONAL";
GRANT CREATE ANY TABLE TO "TRANSACTIONAL";
GRANT CREATE TABLE TO "TRANSACTIONAL";
GRANT DROP ROLLBACK SEGMENT TO "TRANSACTIONAL";
GRANT ALTER ROLLBACK SEGMENT TO "TRANSACTIONAL";
GRANT CREATE ROLLBACK SEGMENT TO "TRANSACTIONAL";
GRANT DROP USER TO "TRANSACTIONAL";
GRANT ALTER USER TO "TRANSACTIONAL";
GRANT BECOME USER TO "TRANSACTIONAL";
GRANT CREATE USER TO "TRANSACTIONAL";
GRANT UNLIMITED TABLESPACE TO "TRANSACTIONAL";
GRANT DROP TABLESPACE TO "TRANSACTIONAL";
GRANT MANAGE TABLESPACE TO "TRANSACTIONAL";
GRANT ALTER TABLESPACE TO "TRANSACTIONAL";
GRANT CREATE TABLESPACE TO "TRANSACTIONAL";
GRANT RESTRICTED SESSION TO "TRANSACTIONAL";
GRANT ALTER SESSION TO "TRANSACTIONAL";
GRANT CREATE SESSION TO "TRANSACTIONAL";
GRANT AUDIT SYSTEM TO "TRANSACTIONAL";
GRANT ALTER SYSTEM TO "TRANSACTIONAL";
-- new object type path: SCHEMA_EXPORT/DEFAULT_ROLE
 ALTER USER "TRANSACTIONAL" DEFAULT ROLE ALL;
-- new object type path: SCHEMA_EXPORT/TABLESPACE_QUOTA
DECLARE 
  TEMP_COUNT NUMBER; 
  SQLSTR VARCHAR2(200); 
BEGIN 
  SQLSTR := 'ALTER USER "TRANSACTIONAL" QUOTA UNLIMITED ON "DATA01"';
  EXECUTE IMMEDIATE SQLSTR;
EXCEPTION 
  WHEN OTHERS THEN
    IF SQLCODE = -30041 THEN 
      SQLSTR := 'SELECT COUNT(*) FROM USER_TABLESPACES 
              WHERE TABLESPACE_NAME = ''DATA01'' AND CONTENTS = ''TEMPORARY''';
      EXECUTE IMMEDIATE SQLSTR INTO TEMP_COUNT;
      IF TEMP_COUNT = 1 THEN RETURN; 
      ELSE RAISE; 
      END IF;
    ELSE
      RAISE;
    END IF;
END;
/
-- new object type path: SCHEMA_EXPORT/PRE_SCHEMA/PROCACT_SCHEMA
-- CONNECT TRANSACTIONAL

BEGIN 
sys.dbms_logrep_imp.instantiate_schema(schema_name=>SYS_CONTEXT('USERENV','CURRENT_SCHEMA'), export_db_name=>'SFT.CONEXIA.COM', inst_scn=>'3888262');
COMMIT; 
END; 
/ 
-- new object type path: SCHEMA_EXPORT/TYPE/TYPE_SPEC
-- CONNECT SYS

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "TRANSACTIONAL"."T_TABLE_RFA" 
  OID '750D941EFC1D5602E053CB50A8C0B6FE' AS OBJECT 
( /* desc transactional.rfa */
ID                                                     NUMBER(10),
 CLAIM_ID                                               NUMBER(10),
 CLAIM_NUMBER                                           VARCHAR2(30),
 DATE_OF_INJURY                                         DATE,
 JURISDICTION                                           VARCHAR2(50),
 SF_REQUEST_ID                                          VARCHAR2(30),
 DATE_INSERT                                            TIMESTAMP(6),
 DATE_UPDATE                                            TIMESTAMP(6),
 DATE_DELETE                                            TIMESTAMP(6),
 DELETED                                                VARCHAR2(1),
 VERSION                                                NUMBER(6),
 USER_REQUEST_ID                                        VARCHAR2(240)
)
/

ALTER TYPE "TRANSACTIONAL"."T_TABLE_RFA" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "TRANSACTIONAL"."T_RFA_ROWTYPE" 
  OID '750D941EFC5D5602E053CB50A8C0B6FE' AS OBJECT 
( /* desc transactional.rfa */
ID                                                     NUMBER(10),
 CLAIM_ID                                               NUMBER(10),
 CLAIM_NUMBER                                           VARCHAR2(30),
 DATE_OF_INJURY                                         DATE,
 JURISDICTION                                           VARCHAR2(50),
 SF_REQUEST_ID                                          VARCHAR2(30),
 DATE_INSERT                                            TIMESTAMP(6),
 DATE_UPDATE                                            TIMESTAMP(6),
 DATE_DELETE                                            TIMESTAMP(6),
 DELETED                                                VARCHAR2(1),
 VERSION                                                NUMBER(6),
 USER_REQUEST_ID                                        VARCHAR2(240)
)
/

ALTER TYPE "TRANSACTIONAL"."T_RFA_ROWTYPE" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "TRANSACTIONAL"."TYPE_RFA_ROWS" 
  OID '750EBE81890C5A23E053CB50A8C085EB' AS OBJECT 
( /* desc transactional.rfa */
ID                                                     NUMBER(10),
 CLAIM_ID                                               NUMBER(10),
 CLAIM_NUMBER                                           VARCHAR2(30),
 DATE_OF_INJURY                                         DATE,
 JURISDICTION                                           VARCHAR2(50),
 SF_REQUEST_ID                                          VARCHAR2(30),
 DATE_INSERT                                            TIMESTAMP(6),
 DATE_UPDATE                                            TIMESTAMP(6),
 DATE_DELETE                                            TIMESTAMP(6),
 DELETED                                                VARCHAR2(1),
 VERSION                                                NUMBER(6),
 USER_REQUEST_ID                                        VARCHAR2(240)
)
/

ALTER TYPE "TRANSACTIONAL"."TYPE_RFA_ROWS" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

/

ALTER SESSION SET NLS_LENGTH_SEMANTICS=BYTE;

CREATE EDITIONABLE TYPE "TRANSACTIONAL"."T_RECORD_T_TABLE_RFA" 
  OID '750EBE81891B5A23E053CB50A8C085EB' 
AS TABLE OF TYPE_RFA_ROWS /* datatype */;
/

ALTER TYPE "TRANSACTIONAL"."T_RECORD_T_TABLE_RFA" 
  COMPILE SPECIFICATION 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

/
-- new object type path: SCHEMA_EXPORT/TABLE/TABLE
CREATE TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8667 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"RFA_PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"RFA_DIAGNOSIS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"STATUS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5344 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"RFA_PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_STATUS_UPDATE" DATE DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"NEW_STATUS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"PREVIOUS_STATUS_ID" NUMBER(10,0), 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "TRANSACTIONAL"."RFA_PROCEDURE" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5492 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"RFA_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"PROCEDURE_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"REQUESTED_QUANTITY" NUMBER(8,0) NOT NULL ENABLE, 
	"AUTHORIZED_QUANTITY" NUMBER(8,0), 
	"DATE_OF_SERVICE" DATE NOT NULL ENABLE, 
	"STATUS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"SOURCE_OF_DECISION_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE), 
	"SF_PROCEDURE_ID" VARCHAR2(100 BYTE) DEFAULT '1' NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "TRANSACTIONAL"."RFA" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9217 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"CLAIM_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"CLAIM_NUMBER" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"DATE_OF_INJURY" DATE NOT NULL ENABLE, 
	"JURISDICTION" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"SF_REQUEST_ID" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
CREATE TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS" 
   (	"ID" NUMBER(10,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 10247 CACHE 20 NOORDER  NOCYCLE  NOT NULL ENABLE, 
	"RFA_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DIAGNOSIS_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DATE_INSERT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"DATE_UPDATE" TIMESTAMP (6) DEFAULT NULL, 
	"DATE_DELETE" TIMESTAMP (6) DEFAULT NULL, 
	"DELETED" VARCHAR2(1 BYTE) DEFAULT 'F' NOT NULL ENABLE, 
	"VERSION" NUMBER(6,0) DEFAULT 1 NOT NULL ENABLE, 
	"USER_REQUEST_ID" VARCHAR2(240 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA01" ;
-- new object type path: SCHEMA_EXPORT/TABLE/GRANT/OWNER_GRANT/OBJECT_GRANT
-- CONNECT TRANSACTIONAL
GRANT DELETE ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" TO "APPROLE";
GRANT INSERT ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" TO "APPROLE";
GRANT SELECT ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" TO "APPROLE";
GRANT UPDATE ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" TO "APPROLE";
GRANT DELETE ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" TO "APPROLE";
GRANT INSERT ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" TO "APPROLE";
GRANT SELECT ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" TO "APPROLE";
GRANT UPDATE ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" TO "APPROLE";
GRANT DELETE ON "TRANSACTIONAL"."RFA_PROCEDURE" TO "APPROLE";
GRANT INSERT ON "TRANSACTIONAL"."RFA_PROCEDURE" TO "APPROLE";
GRANT SELECT ON "TRANSACTIONAL"."RFA_PROCEDURE" TO "APPROLE";
GRANT UPDATE ON "TRANSACTIONAL"."RFA_PROCEDURE" TO "APPROLE";
GRANT DELETE ON "TRANSACTIONAL"."RFA" TO "APPROLE";
GRANT INSERT ON "TRANSACTIONAL"."RFA" TO "APPROLE";
GRANT SELECT ON "TRANSACTIONAL"."RFA" TO "APPROLE";
GRANT UPDATE ON "TRANSACTIONAL"."RFA" TO "APPROLE";
GRANT REFERENCES ON "TRANSACTIONAL"."RFA" TO "MESSAGE";
GRANT DELETE ON "TRANSACTIONAL"."RFA_DIAGNOSIS" TO "APPROLE";
GRANT INSERT ON "TRANSACTIONAL"."RFA_DIAGNOSIS" TO "APPROLE";
GRANT SELECT ON "TRANSACTIONAL"."RFA_DIAGNOSIS" TO "APPROLE";
GRANT UPDATE ON "TRANSACTIONAL"."RFA_DIAGNOSIS" TO "APPROLE";
-- new object type path: SCHEMA_EXPORT/TABLE/IDENTITY_COLUMN
-- CONNECT SYS
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "TRANSACTIONAL"."RFA" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS" MODIFY ("ID" GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH  LIMIT VALUE  CACHE 20 NOORDER  NOCYCLE );
-- new object type path: SCHEMA_EXPORT/FUNCTION/FUNCTION
-- CONNECT TRANSACTIONAL
CREATE EDITIONABLE FUNCTION               CHECK_PROCEDU_APPROVE_X_TIMES (p_claim_number    IN VARCHAR2,
                                                                        p_procedure_code  IN VARCHAR2,
                                                                        p_procedure_type  IN VARCHAR2) RETURN NUMERIC
AS
   id_approved_status   NUMERIC(10,0);
   id_quantity_rules    NUMERIC(12,0);
   max_quantity_value   NUMERIC(12,0);
   v_sum                NUMERIC(12,0);

BEGIN

   SELECT   id
   INTO     id_approved_status
   FROM     PARAMETERS.STATUS
   WHERE    CODE = 'APP';

   SELECT   ID
   INTO     id_quantity_rules
   FROM     PARAMETERS.QUANTITY_RULES
   WHERE    CODE = 'SAME_PROCEDURE_APPROVED_X_TIMES_BEFORE';

   SELECT      COUNT(*) AS match_count
   INTO        v_sum
   FROM        TRANSACTIONAL.RFA           rfa
   INNER JOIN  TRANSACTIONAL.RFA_PROCEDURE rp ON rp.RFA_ID = rfa.ID
   INNER JOIN  PARAMETERS."PROCEDURE"      p  ON p.ID = rp.PROCEDURE_ID
   INNER JOIN  PARAMETERS.PROCEDURE_TYPE   t  ON p.PROCEDURE_TYPE_ID=t.ID
   WHERE       rfa.CLAIM_NUMBER = p_claim_number
         AND   p.CODE = p_procedure_code
         AND   t.CODE = p_procedure_type
         AND   rp.STATUS_ID = 1;

   select      pqr.QUANTITY_VALUE
   INTO        max_quantity_value
   from        PARAMETERS.PROCEDURE                proc
   INNER JOIN  PARAMETERS.PROCEDURE_TYPE           ptype ON proc.PROCEDURE_TYPE_ID = ptype.ID
   INNER JOIN  PARAMETERS.PROCEDURE_QUANTITY_RULES pqr   ON pqr.PROCEDURE_ID = proc.id
   WHERE       proc.CODE = p_procedure_code
         AND   ptype.CODE = p_procedure_type
         AND   pqr.QUANTITY_RULES_ID = id_quantity_rules
         AND   pqr.DATE_DELETE IS NULL;

   if (max_quantity_value >= v_sum) then
      RETURN (1);
   end if;

   RETURN (0);
END;
/
CREATE EDITIONABLE FUNCTION               CHECK_QUANTITY_LIMIT (p_claim_number IN VARCHAR2,
                                                               p_procedure_code IN VARCHAR2,
                                                               p_procedure_type IN VARCHAR2,
                                                               p_count_transaction IN NUMERIC) RETURN NUMERIC
AS
   id_approved_status   NUMERIC(10,0);
   v_sum                NUMERIC(12,0);
   max_quantity_value   NUMERIC(12,0);
   id_quantity_rules    NUMERIC(12,0);

BEGIN

   SELECT      id
   INTO        id_approved_status
   FROM        PARAMETERS.STATUS 
   WHERE       CODE = 'APP';

   SELECT      ID
   INTO        id_quantity_rules
   FROM        PARAMETERS.QUANTITY_RULES 
   WHERE       CODE = 'TOTAL_QTY_LESS_THAN_X';

   SELECT      COALESCE(SUM(rp.REQUESTED_QUANTITY), 0)
   INTO        v_sum
   FROM        TRANSACTIONAL.RFA rfa
   INNER JOIN  TRANSACTIONAL.RFA_PROCEDURE rp ON rfa.id = rp.RFA_ID
   INNER JOIN  PARAMETERS.PROCEDURE p ON p.ID = rp.PROCEDURE_ID
   INNER JOIN  PARAMETERS.PROCEDURE_TYPE t ON p.PROCEDURE_TYPE_ID = t.ID
   WHERE
               rfa.CLAIM_NUMBER = p_claim_number
         AND   p.CODE = p_procedure_code
         AND   t.CODE = p_procedure_type
         AND   rp.STATUS_ID = id_approved_status;

   select      pqr.QUANTITY_VALUE
   INTO        max_quantity_value
   from        PARAMETERS.PROCEDURE proc
   INNER JOIN  PARAMETERS.PROCEDURE_TYPE           ptype ON proc.PROCEDURE_TYPE_ID = ptype.ID
   INNER JOIN  PARAMETERS.PROCEDURE_QUANTITY_RULES pqr   ON pqr.PROCEDURE_ID = proc.id
   WHERE       proc.CODE = p_procedure_code
         AND   ptype.CODE = p_procedure_type
         AND   pqr.QUANTITY_RULES_ID = id_quantity_rules
         AND   pqr.DATE_DELETE IS NULL;

   v_sum := (v_sum + p_count_transaction);

   if (max_quantity_value >= v_sum) then
      RETURN (1);
   end if;

   RETURN (0);
END;
/
CREATE EDITIONABLE FUNCTION                             GET_APROVED_BEFORE (p_claim_number IN VARCHAR2, 
                                                             p_procedure_code IN VARCHAR2, 
                                                             p_procedure_type IN VARCHAR2) RETURN NUMERIC
AS
   v_count NUMERIC(12,0);
BEGIN
	SELECT
			   COUNT(*) AS match_count 
    INTO 	   v_count 
	FROM       TRANSACTIONAL.RFA           rfa
	INNER JOIN TRANSACTIONAL.RFA_PROCEDURE rp ON rp.RFA_ID = rfa.ID
	INNER JOIN PARAMETERS."PROCEDURE"      p  ON p.ID = rp.PROCEDURE_ID
	INNER JOIN PARAMETERS.PROCEDURE_TYPE   t  ON p.PROCEDURE_TYPE_ID=t.ID
	WHERE 
			rfa.CLAIM_NUMBER = p_claim_number 
		AND p.CODE = p_procedure_code 
        AND t.CODE = p_procedure_type
        AND rp.STATUS_ID = 1 
   ;
   if (v_count > 0) then
      RETURN (1);
   end if;
   RETURN (0);
END;
/
CREATE EDITIONABLE FUNCTION               GET_OLDEST_RFA_PROCEDURE (p_claim_number IN VARCHAR2, p_procedure_code IN VARCHAR2, p_procedure_type IN VARCHAR2) RETURN DATE
AS
   v_oldest DATE;
BEGIN
   SELECT MIN (p.DATE_OF_SERVICE) AS dos
   INTO v_oldest
                  FROM        TRANSACTIONAL.RFA           r
                  INNER JOIN  TRANSACTIONAL.RFA_PROCEDURE p ON r.id = p.RFA_ID
                  INNER JOIN  PARAMETERS."PROCEDURE"      o ON o.ID = p.PROCEDURE_ID
                  INNER JOIN  PARAMETERS.PROCEDURE_TYPE ty ON ty.id = o.ID
                  WHERE       r.CLAIM_NUMBER = p_claim_number
                          AND o.CODE = p_procedure_code
                          AND ty.CODE = p_procedure_type
                  GROUP BY    r.CLAIM_NUMBER
   ;
RETURN (v_oldest);
END;

/
CREATE EDITIONABLE FUNCTION                             GET_RFA_BY_SF_REQUEST_NEW ( p_sf_request_id number)
RETURN TRANSACTIONAL.T_RECORD_T_TABLE_RFA
AS
   v_table transactional.T_RECORD_T_TABLE_RFA;
BEGIN
   SELECT  transactional.TYPE_RFA_ROWS
   (ID,
   CLAIM_ID,
   CLAIM_NUMBER,
   DATE_OF_INJURY,
   JURISDICTION,
   SF_REQUEST_ID,
   DATE_INSERT,
   DATE_UPDATE,
   DATE_DELETE,
   DELETED,
   VERSION,
   USER_REQUEST_ID) 
   BULK COLLECT   INTO v_table
   FROM           TRANSACTIONAL.RFA rfa
   --where rownum <= p_sf_request_id;
   WHERE id = p_sf_request_id;
   RETURN v_table;
END GET_RFA_BY_SF_REQUEST_NEW;
/
CREATE EDITIONABLE FUNCTION               RFA_PROCEDURE_QUANTITY (p_claim_number IN VARCHAR2, 
														p_procedure_code IN VARCHAR2, 
														p_procedure_type IN VARCHAR2,
														p_count_transaction IN NUMERIC) RETURN NUMERIC
AS
   id_approved_status NUMERIC(10,0);
   v_sum NUMERIC(12,0);
   
BEGIN
	
	SELECT id 
	INTO id_approved_status
	FROM PARAMETERS.STATUS WHERE CODE = 'APP';
	
	SELECT SUM(rp.REQUESTED_QUANTITY) 
	INTO v_sum
	FROM TRANSACTIONAL.RFA rfa
	INNER JOIN TRANSACTIONAL.RFA_PROCEDURE rp ON rfa.id = rp.RFA_ID
	INNER JOIN PARAMETERS.PROCEDURE p ON p.ID = rp.PROCEDURE_ID
	INNER JOIN PARAMETERS.PROCEDURE_TYPE t ON p.PROCEDURE_TYPE_ID = t.ID
	WHERE 
		rfa.CLAIM_NUMBER = p_claim_number 
		AND p.CODE = p_procedure_code 
        AND t.CODE = p_procedure_type
        AND rp.STATUS_ID = id_approved_status;
  	

      RETURN v_sum;

END;
/
-- new object type path: SCHEMA_EXPORT/FUNCTION/GRANT/OWNER_GRANT/OBJECT_GRANT
GRANT EXECUTE ON "TRANSACTIONAL"."CHECK_PROCEDU_APPROVE_X_TIMES" TO "APPROLE";
GRANT EXECUTE ON "TRANSACTIONAL"."CHECK_QUANTITY_LIMIT" TO "APPROLE";
GRANT EXECUTE ON "TRANSACTIONAL"."GET_APROVED_BEFORE" TO "APPROLE";
GRANT EXECUTE ON "TRANSACTIONAL"."GET_OLDEST_RFA_PROCEDURE" TO "APPROLE";
GRANT EXECUTE ON "TRANSACTIONAL"."RFA_PROCEDURE_QUANTITY" TO "APPROLE";
-- new object type path: SCHEMA_EXPORT/FUNCTION/ALTER_FUNCTION

ALTER FUNCTION "TRANSACTIONAL"."CHECK_PROCEDU_APPROVE_X_TIMES" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:12:57'
/

ALTER FUNCTION "TRANSACTIONAL"."CHECK_QUANTITY_LIMIT" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:13:28'
/

ALTER FUNCTION "TRANSACTIONAL"."GET_APROVED_BEFORE" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:13:28'
/

ALTER FUNCTION "TRANSACTIONAL"."GET_OLDEST_RFA_PROCEDURE" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:13:28'
/

ALTER FUNCTION "TRANSACTIONAL"."GET_RFA_BY_SF_REQUEST_NEW" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:ALL'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:12:57'
/

ALTER FUNCTION "TRANSACTIONAL"."RFA_PROCEDURE_QUANTITY" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'

 REUSE SETTINGS TIMESTAMP '2018-09-12 15:12:57'
/
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/INDEX
BEGIN 
NULL;
END;
/

CREATE INDEX "TRANSACTIONAL"."RFA_CLAIM_ID_IDX" ON "TRANSACTIONAL"."RFA" ("CLAIM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_CLAIM_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_SF_REQUEST_ID_IDX" ON "TRANSACTIONAL"."RFA" ("SF_REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_SF_REQUEST_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_RFA_PRC_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ("RFA_PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_RFA_PRC_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_NEW_STA_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ("NEW_STATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_NEW_STA_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_PRV_STA_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ("PREVIOUS_STATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_STA_HIS_PRV_STA_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

CREATE INDEX "TRANSACTIONAL"."RFA_PRC_RFA_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("RFA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_RFA_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_PRC_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_PRC_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_STA_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("STATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_STA_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_SRC_OF_DECISION_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("SOURCE_OF_DECISION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_SRC_OF_DECISION_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_PRC_SF_PRC_ID_IDX" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("SF_PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_PRC_SF_PRC_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

BEGIN 
NULL;
END;
/

CREATE INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_RFA_ID_IDX" ON "TRANSACTIONAL"."RFA_DIAGNOSIS" ("RFA_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_RFA_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_DIAGNOSIS_ID_IDX" ON "TRANSACTIONAL"."RFA_DIAGNOSIS" ("DIAGNOSIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_DIAGNOSIS_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_RFA_PROC_ID_IDX" ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ("RFA_PROCEDURE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_RFA_PROC_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_RFA_DIAG_ID_IDX" ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ("RFA_DIAGNOSIS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_RFA_DIAG_ID_IDX" NOPARALLEL;
CREATE INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_STATUS_ID_IDX" ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ("STATUS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" PARALLEL 1 ;

  ALTER INDEX "TRANSACTIONAL"."RFA_DIAG_PROC_STATUS_ID_IDX" NOPARALLEL;
BEGIN 
NULL;
END;
/

-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/CONSTRAINT
-- CONNECT SYS
ALTER TABLE "TRANSACTIONAL"."RFA" ADD CONSTRAINT "RFA_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "TRANSACTIONAL"."RFA_PK" ON "TRANSACTIONAL"."RFA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS" ADD CONSTRAINT "RFA_DIAGNOSIS_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_PK" ON "TRANSACTIONAL"."RFA_DIAGNOSIS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ADD CONSTRAINT "RFA_DIAGNOSIS_PROCEDURES_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES_PK" ON "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ADD CONSTRAINT "RFA_PROC_STAT_HIST_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "TRANSACTIONAL"."RFA_PROC_STAT_HIST_PK" ON "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" ADD CONSTRAINT "RFA_PROCEDURE_PK" PRIMARY KEY ("ID")
  USING INDEX (CREATE UNIQUE INDEX "TRANSACTIONAL"."RFA_PROCEDURE_PK" ON "TRANSACTIONAL"."RFA_PROCEDURE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "INDEX01" )  ENABLE;
-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/STATISTICS/INDEX_STATISTICS
-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/REF_CONSTRAINT
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ADD CONSTRAINT "RFA_DIAG_PROC_PROC_FK" FOREIGN KEY ("RFA_PROCEDURE_ID")
	  REFERENCES "TRANSACTIONAL"."RFA_PROCEDURE" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ADD CONSTRAINT "RFA_DIAG_PROC_DIAG_FK" FOREIGN KEY ("RFA_DIAGNOSIS_ID")
	  REFERENCES "TRANSACTIONAL"."RFA_DIAGNOSIS" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS_PROCEDURES" ADD CONSTRAINT "RFA_DIAG_PROC_STAT_FK" FOREIGN KEY ("STATUS_ID")
	  REFERENCES "PARAMETERS"."STATUS" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ADD CONSTRAINT "RFA_PROC_STAT_HIST_PROC_FK" FOREIGN KEY ("RFA_PROCEDURE_ID")
	  REFERENCES "TRANSACTIONAL"."RFA_PROCEDURE" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ADD CONSTRAINT "RFA_PROC_STAT_HIS_PREV_STAT_FK" FOREIGN KEY ("PREVIOUS_STATUS_ID")
	  REFERENCES "PARAMETERS"."STATUS" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCECURE_STATUS_HISTORY" ADD CONSTRAINT "RFA_PROC_STAT_HIST_NEW_STAT_FK" FOREIGN KEY ("NEW_STATUS_ID")
	  REFERENCES "PARAMETERS"."STATUS" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" ADD CONSTRAINT "RFA_PROC_RFA_FK" FOREIGN KEY ("RFA_ID")
	  REFERENCES "TRANSACTIONAL"."RFA" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" ADD CONSTRAINT "RFA_PROC_PROC_FK" FOREIGN KEY ("PROCEDURE_ID")
	  REFERENCES "PARAMETERS"."PROCEDURE" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" ADD CONSTRAINT "RFA_PROC_SOURCE_FK" FOREIGN KEY ("SOURCE_OF_DECISION_ID")
	  REFERENCES "PARAMETERS"."SOURCE_OF_DECISION" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_PROCEDURE" ADD CONSTRAINT "RFA_PROC_STATUS_FK" FOREIGN KEY ("STATUS_ID")
	  REFERENCES "PARAMETERS"."STATUS" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS" ADD CONSTRAINT "RFA_DIAG_RFA_FK" FOREIGN KEY ("RFA_ID")
	  REFERENCES "TRANSACTIONAL"."RFA" ("ID") ENABLE;
ALTER TABLE "TRANSACTIONAL"."RFA_DIAGNOSIS" ADD CONSTRAINT "RFA_DIAG_DIAG_FK" FOREIGN KEY ("DIAGNOSIS_ID")
	  REFERENCES "PARAMETERS"."DIAGNOSIS" ("ID") ENABLE;
-- new object type path: SCHEMA_EXPORT/TABLE/TRIGGER
-- CONNECT TRANSACTIONAL
CREATE EDITIONABLE TRIGGER TRANSACTIONAL.TR_4H_RFA_PROCEDURE AFTER INSERT OR UPDATE ON TRANSACTIONAL.RFA_PROCEDURE FOR EACH ROW
DECLARE
BEGIN
   if (INSERTING or :NEW.STATUS_ID != :OLD.STATUS_ID) then
      INSERT INTO TRANSACTIONAL.RFA_PROCECURE_STATUS_HISTORY
                          (RFA_PROCEDURE_ID,     -- NUMBER(10,0) NOT NULL ENABLE,                                   -- EL ID de RFA_PROCECURE
                           DATE_STATUS_UPDATE,   -- DATE NOT NULL ENABLE,                                           -- DATE_UPDATE de RFA_PROCECURE
                           NEW_STATUS_ID,        -- NUMBER(10,0) NOT NULL ENABLE,
                           PREVIOUS_STATUS_ID,   -- NUMBER(10,0) NOT NULL ENABLE,
                           USER_REQUEST_ID)      -- VARCHAR2(240),
      VALUES
              (:NEW.ID, SYSTIMESTAMP, :NEW.STATUS_ID, :OLD.STATUS_ID, :NEW.USER_REQUEST_ID);
   end if;
END ;





/

ALTER TRIGGER "TRANSACTIONAL"."TR_4H_RFA_PROCEDURE" ENABLE;

ALTER TRIGGER "TRANSACTIONAL"."TR_4H_RFA_PROCEDURE" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
;
CREATE EDITIONABLE TRIGGER TRANSACTIONAL.TR_1U_RFA_PROCECURE_STA_HIS        BEFORE UPDATE ON  TRANSACTIONAL.RFA_PROCECURE_STATUS_HISTORY  FOR EACH ROW DECLARE BEGIN IF (:NEW.VERSION != 999999 AND :NEW.VERSION = :OLD.VERSION) THEN :NEW.DATE_UPDATE := CURRENT_TIMESTAMP; :NEW.VERSION := :OLD.VERSION + 1; END IF; END ;





/

ALTER TRIGGER "TRANSACTIONAL"."TR_1U_RFA_PROCECURE_STA_HIS" ENABLE;

ALTER TRIGGER "TRANSACTIONAL"."TR_1U_RFA_PROCECURE_STA_HIS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
;
-- new object type path: SCHEMA_EXPORT/TABLE/STATISTICS/TABLE_STATISTICS
-- new object type path: SCHEMA_EXPORT/STATISTICS/MARKER
